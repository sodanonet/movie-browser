// Media Query Mixins
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: #{$breakpoint-sm - 1px}) { @content; }
  }
  @if $breakpoint == sm {
    @media (min-width: #{$breakpoint-sm}) { @content; }
  }
  @if $breakpoint == md {
    @media (min-width: #{$breakpoint-md}) { @content; }
  }
  @if $breakpoint == lg {
    @media (min-width: #{$breakpoint-lg}) { @content; }
  }
  @if $breakpoint == xl {
    @media (min-width: #{$breakpoint-xl}) { @content; }
  }
}

// Typography Mixins
@mixin font-size($size, $line-height: normal) {
  font-size: $size;
  @if $line-height != normal {
    line-height: $line-height;
  }
}

@mixin truncate-text {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin line-clamp($lines) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Button Mixins
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-sm $spacing-md;
  border: $border-width solid transparent;
  border-radius: $border-radius-md;
  font-size: $font-size-base;
  font-weight: $font-weight-medium;
  line-height: $line-height-tight;
  text-decoration: none;
  cursor: pointer;
  transition: all $transition-fast;
  user-select: none;

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@mixin button-variant($bg-color, $text-color, $hover-bg: null) {
  background-color: $bg-color;
  color: $text-color;
  border-color: $bg-color;

  &:hover:not(:disabled) {
    background-color: if($hover-bg, $hover-bg, darken($bg-color, 10%));
    border-color: if($hover-bg, $hover-bg, darken($bg-color, 10%));
    transform: translateY(-1px);
  }

  &:active:not(:disabled) {
    transform: translateY(0);
  }
}

// Card Mixins
@mixin card-base {
  background: white;
  border-radius: $border-radius-lg;
  box-shadow: $shadow-sm;
  overflow: hidden;
  transition: box-shadow $transition-normal;
}

@mixin card-hover {
  &:hover {
    box-shadow: $shadow-lg;
    transform: translateY(-2px);
  }
}

// Layout Mixins
@mixin container {
  width: 100%;
  margin: 0 auto;
  padding: 0 $spacing-md;

  @include respond-to(sm) { max-width: 540px; }
  @include respond-to(md) { max-width: 720px; }
  @include respond-to(lg) { max-width: 960px; }
  @include respond-to(xl) { max-width: 1140px; }
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin aspect-ratio($width, $height) {
  position: relative;
  &::before {
    content: '';
    display: block;
    width: 100%;
    padding-bottom: calc(#{$height} / #{$width} * 100%);
  }
  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

// Category Theme Mixins
@mixin category-theme($primary, $secondary, $light) {
  --theme-primary: #{$primary};
  --theme-secondary: #{$secondary};
  --theme-light: #{$light};
}

// Animation Mixins
@mixin fade-in($duration: $transition-normal) {
  animation: fadeIn $duration ease-in-out;
}

@mixin slide-up($duration: $transition-normal) {
  animation: slideUp $duration ease-out;
}

// Keyframe Animations
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes shimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

// Loading Skeleton Mixin
@mixin skeleton {
  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
}